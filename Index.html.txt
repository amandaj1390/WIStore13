<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Your Dropshipping Store</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600;700&display=swap" rel="stylesheet">
  <style>
    :root{
      --accent:#0b6efd;
      --muted:#6b7280;
      --bg:#f7fafc;
      --card:#ffffff;
      --radius:12px;
      font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,"Helvetica Neue",Arial;
    }
    *{box-sizing:border-box}
    body{margin:0;background:var(--bg);color:#0f1724;line-height:1.4}
    header{display:flex;align-items:center;justify-content:space-between;padding:18px 22px;background:linear-gradient(90deg,#fff, #f9fbff);box-shadow:0 1px 0 rgba(0,0,0,0.04);position:sticky;top:0;z-index:20}
    .brand{display:flex;gap:12px;align-items:center}
    .logo{width:44px;height:44px;border-radius:10px;background:linear-gradient(135deg,var(--accent),#7cc1ff);display:flex;align-items:center;justify-content:center;color:white;font-weight:700}
    h1{font-size:16px;margin:0}
    .cart-btn{background:transparent;border:1px solid #e6eefc;padding:8px 12px;border-radius:10px;cursor:pointer;display:flex;gap:8px;align-items:center}
    main{padding:28px;max-width:1080px;margin:0 auto}
    .hero{display:flex;gap:24px;align-items:center;margin-bottom:20px}
    .hero .left{flex:1}
    .hero h2{margin:0 0 8px 0;font-size:24px}
    .hero p{margin:0;color:var(--muted)}
    .hero .cta{margin-top:12px;padding:10px 14px;background:var(--accent);color:#fff;border:none;border-radius:10px;cursor:pointer}
    .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(220px,1fr));gap:18px;margin-top:18px}
    .card{background:var(--card);border-radius:var(--radius);padding:12px;box-shadow:0 6px 20px rgba(2,6,23,0.04);display:flex;flex-direction:column;gap:12px}
    .card img{width:100%;height:160px;object-fit:cover;border-radius:8px}
    .card h3{font-size:15px;margin:0}
    .price{font-weight:700;color:var(--accent)}
    .btn{padding:8px 10px;border-radius:8px;border:0;cursor:pointer}
    .btn-outline{background:transparent;border:1px solid #e6eefc}
    .btn-primary{background:var(--accent);color:#fff}
    .cart-panel{position:fixed;right:18px;bottom:18px;background:linear-gradient(180deg,#fff,#fbfdff);border-radius:16px;width:360px;max-width:calc(100% - 36px);box-shadow:0 10px 35px rgba(2,6,23,0.12);padding:12px;display:none;flex-direction:column;gap:10px;z-index:50}
    .cart-header{display:flex;justify-content:space-between;align-items:center}
    .cart-items{max-height:320px;overflow:auto;display:flex;flex-direction:column;gap:8px;padding-right:6px}
    .cart-item{display:flex;gap:8px;align-items:center}
    .cart-item img{width:56px;height:56px;border-radius:8px;object-fit:cover}
    .qty{display:flex;gap:6px;align-items:center}
    .small{font-size:13px;color:var(--muted)}
    .modal{position:fixed;inset:0;background:rgba(2,6,23,0.45);display:none;align-items:center;justify-content:center;padding:20px;z-index:60}
    .modal .panel{background:var(--card);border-radius:14px;padding:18px;max-width:920px;width:100%;display:flex;gap:18px}
    .modal img{width:420px;max-width:40%;border-radius:10px}
    .product-meta{flex:1;display:flex;flex-direction:column;gap:8px}
    footer{padding:22px;text-align:center;color:var(--muted);font-size:13px}
    @media (max-width:720px){
      .modal .panel{flex-direction:column}
      .modal img{max-width:100%;width:100%}
    }
    .badge{display:inline-block;padding:6px 8px;border-radius:999px;background:#eef6ff;color:var(--accent);font-weight:600;font-size:12px}
    .actions{display:flex;gap:8px}
    .csv-btn{background:#f3f4f6;border-radius:8px;padding:8px;border:0;cursor:pointer}
  </style>
</head>
<body>
  <header>
    <div class="brand">
      <div class="logo">DS</div>
      <div>
        <h1>Your Dropship Shop</h1>
        <div style="font-size:12px;color:var(--muted)">Fast shipping • Curated products</div>
      </div>
    </div>
    <div style="display:flex;gap:10px;align-items:center">
      <button class="cart-btn" id="openCartBtn">Cart (<span id="cartCount">0</span>)</button>
    </div>
  </header>

  <main>
    <section class="hero">
      <div class="left">
        <h2>Curated Products — Ready to Ship</h2>
        <p class="small">This is a demo dropshipping storefront. Customize products below and connect payments & fulfillment with Stripe/PayPal and your supplier.</p>
      </div>
      <div>
        <button class="cta" id="viewAllBtn">Browse Products</button>
      </div>
    </section>

    <section aria-label="Products">
      <div class="grid" id="productsGrid"></div>
    </section>
  </main>

  <!-- Cart Panel -->
  <aside class="cart-panel" id="cartPanel" aria-hidden="true">
    <div class="cart-header">
      <div><strong>Your Cart</strong> <span class="small" id="cartItemsCount">(0 items)</span></div>
      <div style="display:flex;gap:8px;align-items:center">
        <button class="csv-btn" id="exportCsvBtn" title="Export CSV for supplier">Export CSV</button>
        <button id="closeCartBtn" class="btn btn-outline">Close</button>
      </div>
    </div>
    <div class="cart-items" id="cartItems"></div>
    <div style="display:flex;justify-content:space-between;align-items:center">
      <div>
        <div class="small">Subtotal</div>
        <div style="font-weight:700" id="cartSubtotal">$0.00</div>
      </div>
      <div class="actions">
        <button class="btn btn-outline" id="clearCartBtn">Clear</button>
        <button class="btn btn-primary" id="checkoutBtn">Checkout</button>
      </div>
    </div>
  </aside>

  <!-- Product Modal -->
  <div class="modal" id="productModal" aria-hidden="true">
    <div class="panel" role="dialog" aria-modal="true">
      <img id="modalImg" src="" alt="">
      <div class="product-meta">
        <div style="display:flex;justify-content:space-between;align-items:start">
          <div>
            <h3 id="modalTitle">Product Title</h3>
            <div class="small" id="modalVendor">Vendor • Category</div>
          </div>
          <div class="badge" id="modalPrice">$0</div>
        </div>
        <p class="small" id="modalDesc">Full product description...</p>
        <div style="display:flex;gap:8px;align-items:center;margin-top:10px">
          <label class="small">Quantity</label>
          <input id="modalQty" type="number" min="1" value="1" style="width:72px;padding:8px;border-radius:8px;border:1px solid #e6eefc">
        </div>
        <div style="margin-top:auto;display:flex;gap:8px">
          <button class="btn btn-primary" id="addToCartBtn">Add to cart</button>
          <button class="btn btn-outline" id="buyNowBtn">Buy now</button>
          <button id="closeModalBtn" class="btn btn-outline">Close</button>
        </div>
      </div>
    </div>
  </div>

  <footer>
    Built with ❤️ • Customize product list and supplier info in the JS at the bottom. Deploy to Netlify, Vercel, or GitHub Pages.
  </footer>

  <script>
    /* ===========================
       PRODUCTS - replace or extend
       Each product:
         id, title, price (USD), vendor, category, image, sku
       =========================== */
    const PRODUCTS = [
      {
        id: 'p1',
        title: 'Wireless Bluetooth Earbuds',
        price: 24.95,
        vendor: 'AcmeAudio',
        category: 'Electronics',
        image: 'https://images.unsplash.com/photo-1585386959984-a415522c0c2b?q=80&w=1200&auto=format&fit=crop&dpr=1',
        sku: 'EAR-001'
      },
      {
        id: 'p2',
        title: 'Waterproof Yoga Mat (Eco)',
        price: 19.50,
        vendor: 'GreenFit',
        category: 'Fitness',
        image: 'https://images.unsplash.com/photo-1584467735870-3b0f5b1b0d73?q=80&w=1200&auto=format&fit=crop&dpr=1',
        sku: 'YOG-004'
      },
      {
        id: 'p3',
        title: 'Insulated Stainless Steel Tumbler - 20oz',
        price: 15.00,
        vendor: 'SipBetter',
        category: 'Home',
        image: 'https://images.unsplash.com/photo-1510627498534-cf7e9002facc?q=80&w=1200&auto=format&fit=crop&dpr=1',
        sku: 'TMB-020'
      },
      {
        id: 'p4',
        title: 'LED Clip-on Book Light',
        price: 7.95,
        vendor: 'BrightRead',
        category: 'Gadgets',
        image: 'https://images.unsplash.com/photo-1499750310107-5fef28a66643?q=80&w=1200&auto=format&fit=crop&dpr=1',
        sku: 'LED-77'
      }
    ];

    /* ===========================
       CONFIG - set your supplier email here
       When a customer checks out, the site will create an order body you can email to your supplier.
       For automation use Zapier/Integromat or directly connect supplier API as next step.
       =========================== */
    const SUPPLIER_EMAIL = 'supplier@example.com'; // <-- replace with your supplier email
    const STORE_NAME = 'Your Dropship Shop';
    const CURRENCY = 'USD';

    /* ===========================
       Utility & Render Functions
       =========================== */
    const $ = sel => document.querySelector(sel);
    const $$ = sel => Array.from(document.querySelectorAll(sel));

    // Format money
    function fmt(n){ return new Intl.NumberFormat('en-US', {style:'currency',currency:CURRENCY}).format(n) }

    // Render product grid
    const grid = $('#productsGrid');
    function renderProducts(){
      grid.innerHTML = '';
      for(const p of PRODUCTS){
        const card = document.createElement('div');
        card.className = 'card';
        card.innerHTML = `
          <img src="${p.image}" alt="${escapeHtml(p.title)}">
          <div style="display:flex;justify-content:space-between;align-items:center">
            <h3>${escapeHtml(p.title)}</h3>
            <div class="price">${fmt(p.price)}</div>
          </div>
          <div style="display:flex;justify-content:space-between;align-items:center">
            <div class="small">${escapeHtml(p.vendor)} • ${escapeHtml(p.category)}</div>
            <div style="display:flex;gap:8px">
              <button class="btn btn-outline view-btn" data-id="${p.id}">View</button>
              <button class="btn btn-primary add-btn" data-id="${p.id}">Add</button>
            </div>
          </div>
        `;
        grid.appendChild(card);
      }
    }

    function escapeHtml(s){ return String(s).replace(/[&<>"']/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m])); }

    // CART
    const CART_KEY = 'dropship_cart_v1';
    function loadCart(){ try{ return JSON.parse(localStorage.getItem(CART_KEY) || '{}') }catch(e){return {}} }
    function saveCart(cart){ localStorage.setItem(CART_KEY, JSON.stringify(cart)); updateCartUI(); }
    function addToCart(productId, qty=1){
      const cart = loadCart();
      cart[productId] = (cart[productId] || 0) + Number(qty);
      saveCart(cart);
    }
    function setQty(productId, qty){
      const cart = loadCart();
      if(qty <= 0) delete cart[productId]; else cart[productId] = Number(qty);
      saveCart(cart);
    }
    function clearCart(){ localStorage.removeItem(CART_KEY); updateCartUI(); }

    function cartDetails(){
      const cart = loadCart();
      const items = [];
      let subtotal = 0;
      for(const [id, qty] of Object.entries(cart)){
        const p = PRODUCTS.find(x => x.id === id);
        if(!p) continue;
        const total = p.price * qty;
        subtotal += total;
        items.push({ ...p, qty, total });
      }
      return {items, subtotal};
    }

    // Update cart count UI
    function updateCartUI(){
      const {items, subtotal} = cartDetails();
      const count = items.reduce((s,i)=> s + i.qty, 0);
      $('#cartCount').textContent = count;
      $('#cartItemsCount').textContent = `(${count} items)`;
      $('#cartSubtotal').textContent = fmt(subtotal);
      // list items
      const container = $('#cartItems');
      container.innerHTML = '';
      if(items.length === 0){
        container.innerHTML = '<div class="small">Your cart is empty</div>';
      } else {
        for(const it of items){
          const el = document.createElement('div');
          el.className = 'cart-item';
          el.innerHTML = `
            <img src="${it.image}" alt="${escapeHtml(it.title)}">
            <div style="flex:1">
              <div style="display:flex;justify-content:space-between;align-items:center">
                <div><strong style="font-size:14px">${escapeHtml(it.title)}</strong><div class="small">${escapeHtml(it.vendor)} • ${escapeHtml(it.sku)}</div></div>
                <div style="text-align:right">
                  <div class="price">${fmt(it.total)}</div>
                </div>
              </div>
              <div style="display:flex;justify-content:space-between;align-items:center;margin-top:8px">
                <div class="qty small">
                  <button class="btn btn-outline qty-minus" data-id="${it.id}">−</button>
                  <div style="padding:6px 8px;border-radius:8px;border:1px solid #eef2ff;display:inline-block;margin:0 6px">${it.qty}</div>
                  <button class="btn btn-outline qty-plus" data-id="${it.id}">+</button>
                </div>
                <button class="btn btn-outline remove-item" data-id="${it.id}">Remove</button>
              </div>
            </div>
          `;
          container.appendChild(el);
        }
      }
      // attach events for qty buttons
      $$('.qty-plus').forEach(btn => btn.onclick = e => {
        const id = e.currentTarget.dataset.id; const cart = loadCart(); setQty(id, (cart[id]||0)+1);
      });
      $$('.qty-minus').forEach(btn => btn.onclick = e => {
        const id = e.currentTarget.dataset.id; const cart = loadCart(); setQty(id, (cart[id]||0)-1);
      });
      $$('.remove-item').forEach(btn => btn.onclick = e => {
        const id = e.currentTarget.dataset.id; const cart = loadCart(); delete cart[id]; saveCart(cart);
      });
    }

    // Product modal
    let currentProduct = null;
    function openModal(productId){
      const p = PRODUCTS.find(x=>x.id===productId); if(!p) return;
      currentProduct = p;
      $('#modalImg').src = p.image;
      $('#modalTitle').textContent = p.title;
      $('#modalVendor').textContent = `${p.vendor} • ${p.category}`;
      $('#modalPrice').textContent = fmt(p.price);
      $('#modalDesc').textContent = `SKU: ${p.sku}\n\nHigh-quality product. Customize this description in the product list in the JavaScript.`;
      $('#modalQty').value = 1;
      $('#productModal').style.display = 'flex';
      $('#productModal').setAttribute('aria-hidden','false');
    }
    function closeModal(){ $('#productModal').style.display = 'none'; $('#productModal').setAttribute('aria-hidden','true'); currentProduct=null; }

    /* =========================
       Checkout & order creation
       ========================= */
    // Create order summary text (for email or supplier)
    function createOrderText(customer={name:'[Customer Name]',email:'[Customer Email]',address:'[Shipping Address]'}){
      const {items, subtotal} = cartDetails();
      if(items.length === 0) return 'Cart is empty';
      let lines = [];
      lines.push(`${STORE_NAME} - NEW ORDER`);
      lines.push(`Date: ${new Date().toISOString()}`);
      lines.push(`Customer: ${customer.name}`);
      lines.push(`Email: ${customer.email}`);
      lines.push(`Shipping: ${customer.address}`);
      lines.push('---------------------------------------');
      for(const it of items){
        lines.push(`${it.sku} | ${it.title} | Qty: ${it.qty} | Unit: ${fmt(it.price)} | Line: ${fmt(it.total)}`);
      }
      lines.push('---------------------------------------');
      lines.push(`Subtotal: ${fmt(subtotal)}`);
      lines.push('');
      lines.push('Please fulfill and ship to the customer. Thank you.');
      return lines.join('\n');
    }

    // Trigger "Buy Now" -> open mailto to supplier or show popup to confirm
    function checkoutFlow(){
      const {items, subtotal} = cartDetails();
      if(items.length === 0){ alert('Your cart is empty. Add items first.'); return; }
      // Simple customer capture
      const name = prompt('Customer name (for demo):', '');
      if(name === null) return;
      const email = prompt('Customer email:', '');
      if(email === null) return;
      const address = prompt('Customer shipping address (street, city, zip):', '');
      if(address === null) return;
      const body = encodeURIComponent(createOrderText({name,email,address}));
      const subject = encodeURIComponent(`${STORE_NAME} - Order from ${name}`);
      // Open mail client to supplier - you will manually send or use automation
      const mailto = `mailto:${SUPPLIER_EMAIL}?subject=${subject}&body=${body}`;
      window.location.href = mailto;
      // Optionally: clearCart();
    }

    // Export CSV (for supplier)
    function exportCSV(){
      const {items, subtotal} = cartDetails();
      if(items.length === 0){ alert('Cart empty'); return; }
      let csv = 'sku,title,quantity,unit_price,total_price\n';
      for(const it of items){
        csv += `${csvSafe(it.sku)},${csvSafe(it.title)},${it.qty},${it.price},${it.total}\n`;
      }
      // Download CSV
      const blob = new Blob([csv], {type:'text/csv;charset=utf-8;'});
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url; a.download = `order-${Date.now()}.csv`; document.body.appendChild(a); a.click(); a.remove();
      URL.revokeObjectURL(url);
    }
    function csvSafe(text){ return `"${String(text).replace(/"/g,'""')}"`; }

    /* =========================
       Event wiring
       ========================= */
    document.addEventListener('click', (e) => {
      if(e.target.matches('.add-btn')) addToCart(e.target.dataset.id,1);
      if(e.target.matches('.view-btn')) openModal(e.target.dataset.id);
    });

    // header cart button
    $('#openCartBtn').onclick = () => {
      $('#cartPanel').style.display = 'flex';
    };
    $('#closeCartBtn').onclick = () => { $('#cartPanel').style.display = 'none' };
    $('#clearCartBtn').onclick = clearCart;
    $('#checkoutBtn').onclick = checkoutFlow;
    $('#exportCsvBtn').onclick = exportCSV;

    // modal buttons
    $('#closeModalBtn').onclick = closeModal;
    $('#addToCartBtn').onclick = () => {
      if(!currentProduct) return;
      const qty = Math.max(1, Number($('#modalQty').value || 1));
      addToCart(currentProduct.id, qty);
      closeModal();
    };
    $('#buyNowBtn').onclick = () => {
      if(!currentProduct) return;
      const qty = Math.max(1, Number($('#modalQty').value || 1));
      // temporary single-item cart buy -> store original, clear, add only this item, open checkout and restore
      const original = loadCart();
      clearCart();
      addToCart(currentProduct.id, qty);
      checkoutFlow();
      // restore (optional) - keep empty cart to avoid double-sending
      // localStorage.setItem(CART_KEY, JSON.stringify(original));
    };

    // link
    $('#viewAllBtn').onclick = () => window.scrollTo({top:document.querySelector('main').offsetTop,behavior:'smooth'});

    // close modal on outside click
    $('#productModal').addEventListener('click', (e) => { if(e.target === $('#productModal')) closeModal(); });

    // initial render
    renderProducts();
    updateCartUI();

    // small helper to update UI when other tabs modify storage
    window.addEventListener('storage', () => updateCartUI());
  </script>
</body>
</html>
